!function(e){var n=window.webpackHotUpdate;window.webpackHotUpdate=function(e,t){!function(e,n){if(!v[e]||!b[e])return;for(var t in b[e]=!1,n)Object.prototype.hasOwnProperty.call(n,t)&&(f[t]=n[t]);0==--g&&0===h&&S()}(e,t),n&&n(e,t)};var t,o=!0,s="055dcafde3c5f61001df",r=1e4,a={},i=[],c=[];function l(e){var n=j[e];if(!n)return E;var o=function(o){return n.hot.active?(j[o]?-1===j[o].parents.indexOf(e)&&j[o].parents.push(e):(i=[e],t=o),-1===n.children.indexOf(o)&&n.children.push(o)):(console.warn("[HMR] unexpected require("+o+") from disposed module "+e),i=[]),E(o)},s=function(e){return{configurable:!0,enumerable:!0,get:function(){return E[e]},set:function(n){E[e]=n}}};for(var r in E)Object.prototype.hasOwnProperty.call(E,r)&&"e"!==r&&Object.defineProperty(o,r,s(r));return o.e=function(e){return"ready"===u&&p("prepare"),h++,E.e(e).then(n,function(e){throw n(),e});function n(){h--,"prepare"===u&&(x[e]||k(e),0===h&&0===g&&S())}},o}var d=[],u="idle";function p(e){u=e;for(var n=0;n<d.length;n++)d[n].call(null,e)}var m,f,y,g=0,h=0,x={},b={},v={};function w(e){return+e+""===e?+e:e}function M(e){if("idle"!==u)throw new Error("check() is only allowed in idle status");return o=e,p("check"),(n=r,n=n||1e4,new Promise(function(e,t){if("undefined"==typeof XMLHttpRequest)return t(new Error("No browser support"));try{var o=new XMLHttpRequest,r=E.p+""+s+".hot-update.json";o.open("GET",r,!0),o.timeout=n,o.send(null)}catch(e){return t(e)}o.onreadystatechange=function(){if(4===o.readyState)if(0===o.status)t(new Error("Manifest request to "+r+" timed out."));else if(404===o.status)e();else if(200!==o.status&&304!==o.status)t(new Error("Manifest request to "+r+" failed."));else{try{var n=JSON.parse(o.responseText)}catch(e){return void t(e)}e(n)}}})).then(function(e){if(!e)return p("idle"),null;b={},x={},v=e.c,y=e.h,p("prepare");var n=new Promise(function(e,n){m={resolve:e,reject:n}});f={};return k(0),"prepare"===u&&0===h&&0===g&&S(),n});var n}function k(e){v[e]?(b[e]=!0,g++,function(e){var n=document.getElementsByTagName("head")[0],t=document.createElement("script");t.charset="utf-8",t.src=E.p+""+e+"."+s+".hot-update.js",n.appendChild(t)}(e)):x[e]=!0}function S(){p("ready");var e=m;if(m=null,e)if(o)Promise.resolve().then(function(){return H(o)}).then(function(n){e.resolve(n)},function(n){e.reject(n)});else{var n=[];for(var t in f)Object.prototype.hasOwnProperty.call(f,t)&&n.push(w(t));e.resolve(n)}}function H(n){if("ready"!==u)throw new Error("apply() is only allowed in ready status");var t,o,r,c,l;function d(e){for(var n=[e],t={},o=n.slice().map(function(e){return{chain:[e],id:e}});o.length>0;){var s=o.pop(),r=s.id,a=s.chain;if((c=j[r])&&!c.hot._selfAccepted){if(c.hot._selfDeclined)return{type:"self-declined",chain:a,moduleId:r};if(c.hot._main)return{type:"unaccepted",chain:a,moduleId:r};for(var i=0;i<c.parents.length;i++){var l=c.parents[i],d=j[l];if(d){if(d.hot._declinedDependencies[r])return{type:"declined",chain:a.concat([l]),moduleId:r,parentId:l};-1===n.indexOf(l)&&(d.hot._acceptedDependencies[r]?(t[l]||(t[l]=[]),m(t[l],[r])):(delete t[l],n.push(l),o.push({chain:a.concat([l]),id:l})))}}}}return{type:"accepted",moduleId:e,outdatedModules:n,outdatedDependencies:t}}function m(e,n){for(var t=0;t<n.length;t++){var o=n[t];-1===e.indexOf(o)&&e.push(o)}}n=n||{};var g={},h=[],x={},b=function(){console.warn("[HMR] unexpected require("+k.moduleId+") to disposed module")};for(var M in f)if(Object.prototype.hasOwnProperty.call(f,M)){var k;l=w(M);var S=!1,H=!1,I=!1,L="";switch((k=f[M]?d(l):{type:"disposed",moduleId:M}).chain&&(L="\nUpdate propagation: "+k.chain.join(" -> ")),k.type){case"self-declined":n.onDeclined&&n.onDeclined(k),n.ignoreDeclined||(S=new Error("Aborted because of self decline: "+k.moduleId+L));break;case"declined":n.onDeclined&&n.onDeclined(k),n.ignoreDeclined||(S=new Error("Aborted because of declined dependency: "+k.moduleId+" in "+k.parentId+L));break;case"unaccepted":n.onUnaccepted&&n.onUnaccepted(k),n.ignoreUnaccepted||(S=new Error("Aborted because "+l+" is not accepted"+L));break;case"accepted":n.onAccepted&&n.onAccepted(k),H=!0;break;case"disposed":n.onDisposed&&n.onDisposed(k),I=!0;break;default:throw new Error("Unexception type "+k.type)}if(S)return p("abort"),Promise.reject(S);if(H)for(l in x[l]=f[l],m(h,k.outdatedModules),k.outdatedDependencies)Object.prototype.hasOwnProperty.call(k.outdatedDependencies,l)&&(g[l]||(g[l]=[]),m(g[l],k.outdatedDependencies[l]));I&&(m(h,[k.moduleId]),x[l]=b)}var A,_=[];for(o=0;o<h.length;o++)l=h[o],j[l]&&j[l].hot._selfAccepted&&_.push({module:l,errorHandler:j[l].hot._selfAccepted});p("dispose"),Object.keys(v).forEach(function(e){!1===v[e]&&function(e){delete installedChunks[e]}(e)});for(var q,O,P=h.slice();P.length>0;)if(l=P.pop(),c=j[l]){var T={},C=c.hot._disposeHandlers;for(r=0;r<C.length;r++)(t=C[r])(T);for(a[l]=T,c.hot.active=!1,delete j[l],delete g[l],r=0;r<c.children.length;r++){var R=j[c.children[r]];R&&((A=R.parents.indexOf(l))>=0&&R.parents.splice(A,1))}}for(l in g)if(Object.prototype.hasOwnProperty.call(g,l)&&(c=j[l]))for(O=g[l],r=0;r<O.length;r++)q=O[r],(A=c.children.indexOf(q))>=0&&c.children.splice(A,1);for(l in p("apply"),s=y,x)Object.prototype.hasOwnProperty.call(x,l)&&(e[l]=x[l]);var D=null;for(l in g)if(Object.prototype.hasOwnProperty.call(g,l)&&(c=j[l])){O=g[l];var U=[];for(o=0;o<O.length;o++)if(q=O[o],t=c.hot._acceptedDependencies[q]){if(-1!==U.indexOf(t))continue;U.push(t)}for(o=0;o<U.length;o++){t=U[o];try{t(O)}catch(e){n.onErrored&&n.onErrored({type:"accept-errored",moduleId:l,dependencyId:O[o],error:e}),n.ignoreErrored||D||(D=e)}}}for(o=0;o<_.length;o++){var N=_[o];l=N.module,i=[l];try{E(l)}catch(e){if("function"==typeof N.errorHandler)try{N.errorHandler(e)}catch(t){n.onErrored&&n.onErrored({type:"self-accept-error-handler-errored",moduleId:l,error:t,originalError:e}),n.ignoreErrored||D||(D=t),D||(D=e)}else n.onErrored&&n.onErrored({type:"self-accept-errored",moduleId:l,error:e}),n.ignoreErrored||D||(D=e)}}return D?(p("fail"),Promise.reject(D)):(p("idle"),new Promise(function(e){e(h)}))}var j={};function E(n){if(j[n])return j[n].exports;var o=j[n]={i:n,l:!1,exports:{},hot:function(e){var n={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:t!==e,active:!0,accept:function(e,t){if(void 0===e)n._selfAccepted=!0;else if("function"==typeof e)n._selfAccepted=e;else if("object"==typeof e)for(var o=0;o<e.length;o++)n._acceptedDependencies[e[o]]=t||function(){};else n._acceptedDependencies[e]=t||function(){}},decline:function(e){if(void 0===e)n._selfDeclined=!0;else if("object"==typeof e)for(var t=0;t<e.length;t++)n._declinedDependencies[e[t]]=!0;else n._declinedDependencies[e]=!0},dispose:function(e){n._disposeHandlers.push(e)},addDisposeHandler:function(e){n._disposeHandlers.push(e)},removeDisposeHandler:function(e){var t=n._disposeHandlers.indexOf(e);t>=0&&n._disposeHandlers.splice(t,1)},check:M,apply:H,status:function(e){if(!e)return u;d.push(e)},addStatusHandler:function(e){d.push(e)},removeStatusHandler:function(e){var n=d.indexOf(e);n>=0&&d.splice(n,1)},data:a[e]};return t=void 0,n}(n),parents:(c=i,i=[],c),children:[]};return e[n].call(o.exports,o,o.exports,l(n)),o.l=!0,o.exports}E.m=e,E.c=j,E.d=function(e,n,t){E.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},E.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},E.t=function(e,n){if(1&n&&(e=E(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(E.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)E.d(t,o,function(n){return e[n]}.bind(null,o));return t},E.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return E.d(n,"a",n),n},E.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},E.p="",E.h=function(){return s},l("./src/index.js")(E.s="./src/index.js")}({"./css/style.css":function(e,n,t){var o=t("./node_modules/css-loader/index.js!./css/style.css");"string"==typeof o&&(o=[[e.i,o,""]]);var s={hmr:!0,transform:void 0,insertInto:void 0},r=t("./node_modules/style-loader/lib/addStyles.js")(o,s);o.locals&&(e.exports=o.locals),e.hot.accept("./node_modules/css-loader/index.js!./css/style.css",function(n){!function(){var n=t("./node_modules/css-loader/index.js!./css/style.css");if("string"==typeof n&&(n=[[e.i,n,""]]),!function(e,n){var t,o=0;for(t in e){if(!n||e[t]!==n[t])return!1;o++}for(t in n)o--;return 0===o}(o.locals,n.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");r(n)}()}),e.hot.dispose(function(){r()})},"./node_modules/css-loader/index.js!./css/style.css":function(e,n,t){var o=t("./node_modules/css-loader/lib/url/escape.js");(e.exports=t("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,"* {\n  box-sizing: border-box;\n}\n\ncanvas {\n  background-image: url("+o(t("./src/background/img/background.jpg"))+");\n  display: block;\n  margin: 0 auto;\n  z-index: 1;\n}\n\n.casts {\n  position: absolute;\n  width: 550px;\n  height: 200px;\n  display: none;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-content: flex-start;\n  left: 34%;\n  top: 5%;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 30px;\n}\n\n.descriptionKeyBoard {\n  display: block;\n  width: 100%;\n  margin-top: 15px;\n  font-size: 25px;\n  color: #fff;\n  font-weight: bold;\n  text-align: center;\n}\n\n.btn {\n  border: rgb(16, 150, 56) solid 5px;\n  border-radius: 10px;\n  background-color: rgb(255, 215, 0);\n  z-index: 100;\n  width: 150px;\n  height: 50px;\n  color: #000000;\n  font-size: 20px;\n  margin-left: 20px;\n  margin-top: 15px;\n}\n\n.send {\n  margin: 10px;\n  border: 5px solid rgb(16, 150, 56);\n  border-radius: 10px;\n  font-size: 18px;\n  background-color: rgb(255, 215, 0);\n  padding: 5px;\n}\n\n.menu-open {\n  height: 65px;\n  position: absolute;\n  z-index: 4;\n  left: 45%;\n  top: 13%;\n}\n\n.btn:hover {\n  cursor: pointer;\n}\n\n.game-over {\n  position: absolute;\n  width: 500px;\n  height: 800px;\n  display: none;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  left: 34%;\n  top: 5%;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  z-index: 1000;\n}\n\n.game-over-heading {\n  font-size: 35px;\n  margin-top: 50px;\n  margin-left: 50px;\n  font-weight: bold;\n  color: red;\n}\n\ntable {\n  border: 10px solid black;\n  overflow: hidden;\n  border-collapse: collapse;\n}\n\ncaption {\n  font-size: 25px;\n  font-color: red;\n  padding: 15px;\n  font-weight: bold;\n}\n\nth {\n\n  font-size: 18px;\n  border: 3px solid black;\n  padding: 15px;\n}\n\ntd {\n  font-size: 14px;\n  border: 3px solid black;\n  padding: 15px;\n}\n\n.selected {\n  -webkit-transform: scale(1.2);\n  -ms-transform: scale(1.2);\n  transform: scale(1.2);\n}\n",""])},"./node_modules/css-loader/index.js!./src/mainHero/index.css":function(e,n,t){(e.exports=t("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".mainHero-name,\n.mainHero-HP{\n\tz-index: 3;\n\tposition: absolute;\n\tleft: 69%;\n\ttop: 5%;\n\tfont-size: 24px;\n\tcolor: #000000;\n\tfont-weight: bold;\n}\n\n.mainHero-name{\n\tleft: 10%;\n\ttop: 30px;\n}\n\n.mainHero-HP{\n\tleft: 11%;\n\ttop: 50px;\n}",""])},"./node_modules/css-loader/index.js!./src/monsters/index.css":function(e,n,t){(e.exports=t("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".main-hero{\n\tz-index: 3;\n\tposition: absolute;\n}\n\n.monster-info{\n\twidth: 1280px;\n\tmargin: 0 auto;\n\tposition: relative;\n}\n\n.monster-name,\n.monster-HP{\n\tz-index: 3;\n\tposition: absolute;\n\tleft: 69%;\n\ttop: 5%;\n\tfont-size: 24px;\n\tcolor: #000000;\n\tfont-weight: bold;\n}\n\n.monster-HP{\n\tleft: 85%;\n\ttop: 50px;\n}\n\n.monster-name{\n\tleft: 80%;\n\ttop: 30px;\n}",""])},"./node_modules/css-loader/index.js!./src/tasks/audioMet/index.css":function(e,n,t){(e.exports=t("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".audioMet{\n\twidth: 550px;\n\theight: 500px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tbackground-color: rgba(0, 0, 0, 0.5);\n\tborder-radius: 10px;\n\tposition: absolute;\n\tz-index: 5;\n\tleft: 35%;\n\ttop: 10%;\n\tdisplay: none;\n}\n\n.taskHeading,\n.task,\nlabel{\n\tmargin-top: 15px;\n\tfont-size: 25px;\n\tcolor: #fff;\n\tfont-weight: bold;\n\ttext-align: center;\n}\n\ninput{\n\tmargin-top: 15px;\n}\n\n.selected {\n  font-color: black;\n}\n",""])},"./node_modules/css-loader/index.js!./src/tasks/mathMet/index.css":function(e,n,t){(e.exports=t("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".mathMet{\n\twidth: 550px;\n\theight: 400px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tbackground-color: rgba(0, 0, 0, 0.5);;\n\tborder-radius: 10px;\n\tposition: absolute;\n\tz-index: 5;\n\tleft: 35%;\n\ttop: 10%;\n\tdisplay: none;\n}\n\n.taskHeading,\n.task,\nlabel{\n\tmargin-top: 15px;\n\tfont-size: 25px;\n\tcolor: #fff;\n\tfont-weight: bold;\n\ttext-align: center;\n}\n\ninput{\n\tmargin-top: 15px;\n}\n\n.selected {\n  font-color: black;\n}\n",""])},"./node_modules/css-loader/index.js!./src/tasks/translateMet/index.css":function(e,n,t){(e.exports=t("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".translateMet{\n\twidth: 550px;\n\theight: 400px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tbackground-color: rgba(0, 0, 0, 0.5);\n\tborder-radius: 10px;\n\tposition: absolute;\n\tz-index: 5;\n\tleft: 35%;\n\ttop: 10%;\n\tdisplay: none;\n}\n\n.taskHeading,\n.task,\nlabel{\n\tmargin-top: 15px;\n\tfont-size: 25px;\n\tcolor: #fff;\n\tfont-weight: bold;\n\ttext-align: center;\n}\n\ninput{\n\tmargin-top: 15px;\n}\n\n\n",""])},"./node_modules/css-loader/lib/css-base.js":function(e,n){e.exports=function(e){var n=[];return n.toString=function(){return this.map(function(n){var t=function(e,n){var t=e[1]||"",o=e[3];if(!o)return t;if(n&&"function"==typeof btoa){var s=(a=o,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),r=o.sources.map(function(e){return"/*# sourceURL="+o.sourceRoot+e+" */"});return[t].concat(r).concat([s]).join("\n")}var a;return[t].join("\n")}(n,e);return n[2]?"@media "+n[2]+"{"+t+"}":t}).join("")},n.i=function(e,t){"string"==typeof e&&(e=[[null,e,""]]);for(var o={},s=0;s<this.length;s++){var r=this[s][0];"number"==typeof r&&(o[r]=!0)}for(s=0;s<e.length;s++){var a=e[s];"number"==typeof a[0]&&o[a[0]]||(t&&!a[2]?a[2]=t:t&&(a[2]="("+a[2]+") and ("+t+")"),n.push(a))}},n}},"./node_modules/css-loader/lib/url/escape.js":function(e,n){e.exports=function(e){return"string"!=typeof e?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),/["'() \t\n]/.test(e)?'"'+e.replace(/"/g,'\\"').replace(/\n/g,"\\n")+'"':e)}},"./node_modules/style-loader/lib/addStyles.js":function(e,n,t){var o,s,r={},a=(o=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===s&&(s=o.apply(this,arguments)),s}),i=function(e){var n={};return function(e){if("function"==typeof e)return e();if(void 0===n[e]){var t=function(e){return document.querySelector(e)}.call(this,e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}}(),c=null,l=0,d=[],u=t("./node_modules/style-loader/lib/urls.js");function p(e,n){for(var t=0;t<e.length;t++){var o=e[t],s=r[o.id];if(s){s.refs++;for(var a=0;a<s.parts.length;a++)s.parts[a](o.parts[a]);for(;a<o.parts.length;a++)s.parts.push(x(o.parts[a],n))}else{var i=[];for(a=0;a<o.parts.length;a++)i.push(x(o.parts[a],n));r[o.id]={id:o.id,refs:1,parts:i}}}}function m(e,n){for(var t=[],o={},s=0;s<e.length;s++){var r=e[s],a=n.base?r[0]+n.base:r[0],i={css:r[1],media:r[2],sourceMap:r[3]};o[a]?o[a].parts.push(i):t.push(o[a]={id:a,parts:[i]})}return t}function f(e,n){var t=i(e.insertInto);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var o=d[d.length-1];if("top"===e.insertAt)o?o.nextSibling?t.insertBefore(n,o.nextSibling):t.appendChild(n):t.insertBefore(n,t.firstChild),d.push(n);else if("bottom"===e.insertAt)t.appendChild(n);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var s=i(e.insertInto+" "+e.insertAt.before);t.insertBefore(n,s)}}function y(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var n=d.indexOf(e);n>=0&&d.splice(n,1)}function g(e){var n=document.createElement("style");return void 0===e.attrs.type&&(e.attrs.type="text/css"),h(n,e.attrs),f(e,n),n}function h(e,n){Object.keys(n).forEach(function(t){e.setAttribute(t,n[t])})}function x(e,n){var t,o,s,r;if(n.transform&&e.css){if(!(r=n.transform(e.css)))return function(){};e.css=r}if(n.singleton){var a=l++;t=c||(c=g(n)),o=w.bind(null,t,a,!1),s=w.bind(null,t,a,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(t=function(e){var n=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",h(n,e.attrs),f(e,n),n}(n),o=function(e,n,t){var o=t.css,s=t.sourceMap,r=void 0===n.convertToAbsoluteUrls&&s;(n.convertToAbsoluteUrls||r)&&(o=u(o));s&&(o+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(s))))+" */");var a=new Blob([o],{type:"text/css"}),i=e.href;e.href=URL.createObjectURL(a),i&&URL.revokeObjectURL(i)}.bind(null,t,n),s=function(){y(t),t.href&&URL.revokeObjectURL(t.href)}):(t=g(n),o=function(e,n){var t=n.css,o=n.media;o&&e.setAttribute("media",o);if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}.bind(null,t),s=function(){y(t)});return o(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;o(e=n)}else s()}}e.exports=function(e,n){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(n=n||{}).attrs="object"==typeof n.attrs?n.attrs:{},n.singleton||"boolean"==typeof n.singleton||(n.singleton=a()),n.insertInto||(n.insertInto="head"),n.insertAt||(n.insertAt="bottom");var t=m(e,n);return p(t,n),function(e){for(var o=[],s=0;s<t.length;s++){var a=t[s];(i=r[a.id]).refs--,o.push(i)}e&&p(m(e,n),n);for(s=0;s<o.length;s++){var i;if(0===(i=o[s]).refs){for(var c=0;c<i.parts.length;c++)i.parts[c]();delete r[i.id]}}}};var b,v=(b=[],function(e,n){return b[e]=n,b.filter(Boolean).join("\n")});function w(e,n,t,o){var s=t?"":o.css;if(e.styleSheet)e.styleSheet.cssText=v(n,s);else{var r=document.createTextNode(s),a=e.childNodes;a[n]&&e.removeChild(a[n]),a.length?e.insertBefore(r,a[n]):e.appendChild(r)}}},"./node_modules/style-loader/lib/urls.js":function(e,n){e.exports=function(e){var n="undefined"!=typeof window&&window.location;if(!n)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var t=n.protocol+"//"+n.host,o=t+n.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,n){var s,r=n.trim().replace(/^"(.*)"$/,function(e,n){return n}).replace(/^'(.*)'$/,function(e,n){return n});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(r)?e:(s=0===r.indexOf("//")?r:0===r.indexOf("/")?t+r:o+r.replace(/^\.\//,""),"url("+JSON.stringify(s)+")")})}},"./src/background/img/background.jpg":function(e,n,t){e.exports=t.p+"./images/background.jpg"},"./src/index.js":function(e,n,t){"use strict";t.r(n);t("./src/mainHero/index.css");var o=t("./src/mainHero/img/main-hero.png"),s=t.n(o);t("./src/monsters/index.css");var r=t("./src/monsters/img/eyes1.png"),a=t.n(r),i=t("./src/monsters/img/eyes2.png"),c=t.n(i),l=t("./src/monsters/img/eyes3.png"),d=t.n(l),u=t("./src/monsters/img/body1.png"),p=t.n(u),m=t("./src/monsters/img/body2.png"),f=t.n(m),y=t("./src/monsters/img/body3.png"),g=t.n(y),h=t("./src/monsters/img/legs1.png"),x=t.n(h),b=t("./src/monsters/img/legs2.png"),v=t.n(b),w=t("./src/monsters/img/legs3.png"),M=t.n(w),k=t("./src/monsters/img/mouth1.png"),S=t.n(k),H=t("./src/monsters/img/mouth2.png"),j=t.n(H),E=t("./src/monsters/img/mouth3.png"),I=t.n(E),L=t("./src/monsters/img/hands1.png"),A=t.n(L),_=t("./src/monsters/img/hands2.png"),q=t.n(_),O=t("./src/monsters/img/hands3.png"),P=t.n(O);function T(){const e=document.querySelector("canvas").getContext("2d");new Promise(n=>{const t=new Image,o=[p.a,f.a,g.a],s=Math.floor(Math.random()*o.length);t.onload=(()=>{e.drawImage(t,1100,400),n()}),t.src=o[s]}).then(function(){return new Promise(n=>{const t=new Image,o=[A.a,q.a,P.a],s=Math.floor(Math.random()*o.length);t.onload=(()=>{e.drawImage(t,1050,450),n()}),t.src=o[s]})}).then(function(){return new Promise(n=>{const t=new Image,o=[x.a,v.a,M.a],s=Math.floor(Math.random()*o.length);t.onload=(()=>{e.drawImage(t,1110,500),n()}),t.src=o[s]})}).then(function(){return new Promise(n=>{const t=new Image,o=[S.a,j.a,I.a],s=Math.floor(Math.random()*o.length);t.onload=(()=>{e.drawImage(t,1120,473),n()}),t.src=o[s]})}).then(function(){const n=new Image,t=[a.a,c.a,d.a],o=Math.floor(Math.random()*t.length);n.onload=(()=>{e.drawImage(n,1120,415)}),n.src=t[o]}),function(){const e=document.querySelector(".monster-name"),n=["Good","Bad","Ugly"],t=["Wolf","Dragon","Vampire"],o=["Cartman","Kyle","Kenny"],s=Math.floor(Math.random()*n.length),r=Math.floor(Math.random()*t.length),a=Math.floor(Math.random()*o.length),i=`${n[s]} ${t[r]} ${o[a]}`;e.innerHTML=i}()}t("./src/tasks/mathMet/index.css");function C(){const e=document.querySelector(".monster-HP"),n=document.querySelector("canvas").getContext("2d"),t=Math.floor(100*Math.random());let o=localStorage.getItem("monsterHP");if((o-=t)>0&&(localStorage.setItem("monsterHP",o),e.innerHTML=`${o} HP`),o<0){localStorage.setItem("monsterHP",100);let t=+localStorage.getItem("monstersKilled");t+=1,localStorage.setItem("monstersKilled",t),e.innerHTML="100 HP",n.clearRect(900,200,400,395),T()}}function R(){const e=document.querySelector(".mainHero-HP"),n=Math.floor(100*Math.random());let t=localStorage.getItem("mainHero");t=+t+n,localStorage.setItem("mainHero",t),e.innerHTML=`${t} HP`}function D(){return new Promise(e=>{const n=document.querySelector(".mainHero-HP"),t=Math.floor(100*Math.random());let o=localStorage.getItem("mainHero");(o-=t)>0&&(localStorage.setItem("mainHero",o),n.innerHTML=`${o} HP`,e()),o<=0&&(function(){console.log("updateLeaderBoard");const e=+localStorage.getItem("monstersKilled"),n=+localStorage.getItem("curplayerid");let t=localStorage.getItem("rating");t=null==t?[]:JSON.parse(t);const o={name:JSON.parse(localStorage.getItem("players"))[n].userName,streak:e};t.push(o),t=t.sort((e,n)=>n.streak-e.streak).slice(0,10),localStorage.setItem("rating",JSON.stringify(t))}(),function(){const e=document.querySelector("#goLP"),n=document.querySelector(".game-over"),t=document.querySelector("tbody"),o=document.querySelector(".mainHero-HP");let s=localStorage.getItem("rating");s=null==s?[]:JSON.parse(s);for(let e=0;e<s.length;e+=1){const n=document.createElement("tr"),o=document.createElement("td"),r=document.createElement("td");o.innerText=s[e].name,r.innerText=s[e].streak,n.appendChild(o),n.appendChild(r),t.appendChild(n)}document.querySelector(".casts").style.display="none",document.querySelector(".mathMet").style.display="none",document.querySelector(".audioMet").style.display="none",document.querySelector(".translateMet").style.display="none",document.querySelector(".menu-open").style.display="none",o.innerHTML="0 HP",n.style.display="flex",e.addEventListener("click",()=>{window.location.replace("../../landing-page.html")}),document.body.addEventListener("keydown",function(e){"Escape"===e.code&&"flex"===n.style.display&&window.location.replace("../../landing-page.html")})}())})}function U(){const e=document.querySelector(".monster-HP"),n=Math.floor(100*Math.random());let t=localStorage.getItem("monsterHP");t=+t+n,localStorage.setItem("monsterHP",t),e.innerHTML=`${t} HP`}var N=t("./src/tasks/spellsAnimation/img/axe.png"),z=t.n(N),$=t("./src/tasks/spellsAnimation/sounds/spear.mp3"),B=t.n($);function J(){return new Promise(e=>{const n=document.querySelector("canvas").getContext("2d");let t=260;const o=128,s=445,r=new Image;!function(){const e=new Audio;e.src=B.a,e.volume=.5,e.autoplay=!0}();const a=()=>{t<900?(n.clearRect(t,s,o,o),n.drawImage(r,t,s),t+=10,requestAnimationFrame(a)):(n.clearRect(900,s,o,o),e())};a(),r.src=z.a})}var F=t("./src/tasks/spellsAnimation/img/hammer.png"),K=t.n(F),G=t("./src/tasks/spellsAnimation/sounds/hammer.mp3"),Y=t.n(G);function X(){return new Promise(e=>{const n=document.querySelector("canvas").getContext("2d");let t=900;const o=128,s=445,r=new Image;!function(){const e=new Audio;e.src=Y.a,e.volume=.5,e.autoplay=!0}();const a=()=>{t>260?(n.clearRect(t,s,o,o),n.drawImage(r,t,s),t-=10,requestAnimationFrame(a)):(n.clearRect(260,s,o,o),e())};a(),r.src=K.a})}var V=t("./src/tasks/spellsAnimation/img/cross.png"),W=t.n(V),Q=t("./src/tasks/spellsAnimation/sounds/drop.mp3"),Z=t.n(Q);function ee(){return new Promise(e=>{const n=document.querySelector("canvas").getContext("2d");let t=100;const o=100,s=128,r=new Image;!function(){const e=new Audio;e.src=Z.a,e.volume=.5,e.autoplay=!0}();const a=()=>{t<300?(n.clearRect(o,t-10,s,s),n.drawImage(r,o,t),t+=10,requestAnimationFrame(a)):(n.clearRect(o,290,s,s),e())};a(),r.src=W.a})}function ne(){return new Promise(e=>{const n=document.querySelector("canvas").getContext("2d");let t=100;const o=1050,s=128,r=new Image;!function(){const e=new Audio;e.src=Z.a,e.volume=.5,e.autoplay=!0}();const a=()=>{t<270?(n.clearRect(o,t-10,s,s),n.drawImage(r,o,t),t+=10,requestAnimationFrame(a)):(n.clearRect(o,260,s,s),e())};a(),r.src=W.a})}!function(){const e=document.createElement("button");e.className="btn",e.classList.add("select"),e.id="callMathMet",e.innerHTML="Arithmetics",document.querySelector(".casts").appendChild(e)}(),function(){const e=document.createElement("div");e.className="mathMet",e.innerHTML='<span class="taskHeading">Solve an example:</span><span class="task"></span><label for="#userMathInput">Your answer:</label><input type="text" id="userMathInput"><button type="submit" id="sendMathAnswer" class="send">Attack(Enter)</button><button type="submit" id="sendMathCure" class="send">Cure(AltRight)</button><button type="submit" id="mathMainMenu" class="send">Back(Esc)</button>',document.body.appendChild(e)}();const te=document.querySelector("#callMathMet"),oe=document.querySelector(".casts"),se=document.querySelector(".mathMet"),re=document.querySelector("#sendMathAnswer"),ae=document.querySelector("#sendMathCure"),ie=document.querySelector("#mathMainMenu"),ce=document.querySelector("#userMathInput"),le=document.querySelector(".task"),de=()=>{let e=0,n=0;const t=["+","-"],o=Math.floor(Math.random()*t.length);return e=Math.floor(100*Math.random()+0),n=Math.floor(100*Math.random()+0),[t[o],e,n]};let ue=[];function pe(){le.innerHTML="",oe.style.display="flex",ce.value="",console.log("show window")}te.addEventListener("click",()=>{oe.style.display="none",se.style.display="flex",ue=de(),le.innerHTML=`${ue[1]} ${ue[0]} ${ue[2]}`}),document.addEventListener("keydown",function(e){"Space"===e.code&&te.classList.contains("selected")&&"flex"===oe.style.display&&(oe.style.display="none",se.style.display="flex",ue=de(),le.innerHTML=`${ue[1]} ${ue[0]} ${ue[2]}`,ce.focus())});const me=()=>{let e=0;return"+"===ue[0]?`${e=ue[1]+ue[2]}`:"-"===ue[0]?`${e=ue[1]-ue[2]}`:0};ie.addEventListener("click",()=>{se.style.display="none",oe.style.display="flex"}),document.addEventListener("keydown",function(e){"Escape"===e.code&&"flex"===se.style.display&&(se.style.display="none",oe.style.display="flex"),"Enter"===e.code&&"flex"===se.style.display&&(se.style.display="none",ce.value.trim()===me()?J().then(()=>{C(),pe()}):X().then(D).then(pe)),"AltRight"===e.code&&"flex"===se.style.display&&(ce.value.trim()===me()?ee().then(()=>{R(),pe()}):ne().then(()=>{U(),pe()}),se.style.display="none",le.innerHTML="",oe.style.display="flex",ce.value="")}),re.addEventListener("click",()=>{se.style.display="none",ce.value.trim()===me()?J().then(()=>{C(),pe()}):X().then(D).then(pe)}),ae.addEventListener("click",()=>{se.style.display="none",le.innerHTML="",oe.style.display="flex",ce.value.trim()===me()?ee().then(()=>{R(),pe()}):ne().then(()=>{U(),pe()}),ce.value=""});t("./src/tasks/audioMet/index.css");!function(){const e=document.createElement("button");e.className="btn",e.id="callAudioMet",e.classList.add("select"),e.innerHTML="Audio",document.querySelector(".casts").appendChild(e)}(),function(){const e=document.createElement("div");e.className="audioMet",e.innerHTML='<span class="taskHeading">Enter the word that you heard<br>(Use CtrlRight to listen word):</span><span class="task"><audio src="" controls></audio></span><label for="#userAudioInput">Your answer:</label><input type="text" id="userAudioInput"><button type="submit" id="sendAudioAnswer" class="send">Attack(Enter)</button><button type="submit" id="sendAudioCure" class="send">Cure(AltLeft)</button><button type="submit" id="audioMainMenu" class="send">Back(Esc)</button>;',document.body.appendChild(e)}();const fe=document.querySelector(".casts"),ye=document.querySelector(".audioMet"),ge=document.querySelector("#sendAudioAnswer"),he=document.querySelector("#sendAudioCure"),xe=document.querySelector("#audioMainMenu"),be=document.querySelector("#callAudioMet"),ve=document.querySelector("#userAudioInput"),we=document.querySelector("audio"),Me={"https://www.anglaisfacile.com/free/words/w/watch.wav":"watch","https://www.anglaisfacile.com/free/words/h/humble.wav":"humble","https://www.anglaisfacile.com/free/words/r/respect.wav":"respect","https://www.anglaisfacile.com/free/words/g/ground.wav":"ground","https://www.anglaisfacile.com/free/words/m/movie.wav":"movie","https://www.anglaisfacile.com/free/words/v/vomit.wav":"vomit","https://www.anglaisfacile.com/free/words/c/confidence.wav":"confidence"};let ke="";const Se=()=>{return Math.floor(Math.random()*Object.keys(Me).length)};function He(){we.src="",fe.style.display="flex",ve.value=""}be.addEventListener("click",()=>{fe.style.display="none",ke=Object.keys(Me)[Se()],we.src=ke,ye.style.display="flex"}),document.addEventListener("keydown",function(e){"Space"===e.code&&be.classList.contains("selected")&&"flex"===fe.style.display&&(fe.style.display="none",ke=Object.keys(Me)[Se()],we.src=ke,ye.style.display="flex")}),xe.addEventListener("click",()=>{ye.style.display="none",fe.style.display="flex"}),document.addEventListener("keydown",function(e){"ControlRight"===e.code&&"flex"===ye.style.display&&(we.play(),ve.focus()),"Escape"===e.code&&"flex"===ye.style.display&&(ye.style.display="none",fe.style.display="flex"),"Enter"===e.code&&"flex"===ye.style.display&&(ye.style.display="none",ve.value.trim()===Me[ke]?J().then(()=>{C(),He()}):X().then(D).then(He)),"AltRight"===e.code&&"flex"===ye.style.display&&(ye.style.display="none",ve.value.trim()===Me[ke]?ee().then(()=>{R(),He()}):ne().then(()=>{U(),He()}))}),ge.addEventListener("click",()=>{ye.style.display="none",ve.value.trim()===Me[ke]?J().then(()=>{C(),He()}):X().then(D).then(He)}),he.addEventListener("click",()=>{ye.style.display="none",ve.value.trim()===Me[ke]?ee().then(()=>{R(),He()}):ne().then(()=>{U(),He()})});t("./src/tasks/translateMet/index.css");const je={dog:["собака","пес","собачка"],task:["задача","урок","задание"],cat:["кот","кошка"],mind:["разум","ум","мнение"],game:["развлечение","игра","партия"],skirt:["юбка","подол","край"],global:["глобальный","мировой","общий","всеобщий"],activity:["активность","деятельность","энергия"],amount:["количество","сумма","итог"],blind:["слепой","слепить","штора"],cartoon:["мультфильм","карикатура","комикс","мультик"],transfer:["перевод","передача","трансфер"],dictionary:["словарь"],environment:["окружающая среда","окружение","среда"],famous:["известный","знаменитый","замечательный"],horror:["ужас","ужастик"],inspiration:["вдохновение","воодушевление","вдох"],jealous:["завистливый","ревнивый","заботливый","зависть","ревность"],lucky:["счастливый","везучий","удачливый"],message:["сообщение","послание","письмо"],mysterious:["загадочный","таинственный","непостижимый"],realize:["реализовать","понимать","осуществлять"]};!function(){const e=document.createElement("button");e.className="btn",e.id="callTranslateMet",e.classList.add("select"),e.innerHTML="Translate",document.querySelector(".casts").appendChild(e)}(),function(){const e=document.createElement("div");e.className="translateMet",e.innerHTML='<span class="taskHeading">Translate the next word:</span><span class="task" id="translateText"></span><label for="#userTranslateInput">Your answer:</label><input type="text" id="userTranslateInput"><button type="submit" id="sendTranslateAnswer" class="send">Attack(Enter)</button><button type="submit" id="sendTranslateCure" class="send">Cure(AltRight)</button><button type="submit" id="translateMainMenu" class="send">Back(Esc)</button>',document.body.appendChild(e)}();const Ee=document.querySelector("#callTranslateMet"),Ie=document.querySelector(".casts"),Le=document.querySelector(".translateMet"),Ae=document.querySelector("#sendTranslateAnswer"),_e=document.querySelector("#sendTranslateCure"),qe=document.querySelector("#translateMainMenu"),Oe=document.querySelector("#userTranslateInput"),Pe=document.querySelector("#translateText"),Te=()=>{return Math.floor(Math.random()*Object.keys(je).length)};let Ce="";function Re(){Pe.innerHTML="",Ie.style.display="flex",Oe.value=""}Ee.addEventListener("click",()=>{Ie.style.display="none",Le.style.display="flex",Ce=Object.keys(je)[Te()],Pe.innerHTML=Ce}),document.addEventListener("keydown",function(e){"Space"===e.code&&Ee.classList.contains("selected")&&"flex"===Ie.style.display&&(Ie.style.display="none",Le.style.display="flex",Ce=Object.keys(je)[Te()],Pe.innerHTML=Ce,Oe.focus())}),qe.addEventListener("click",()=>{Le.style.display="none",Ie.style.display="flex"}),document.addEventListener("keydown",function(e){if("Escape"===e.code&&"flex"===Le.style.display&&(Le.style.display="none",Ie.style.display="flex"),"Enter"===e.code&&"flex"===Le.style.display){Le.style.display="none";let e=[],n=!1;e=je[Ce];for(let t=0;t<e.length;t+=1)Oe.value.trim()===e[t]&&(n=!0);n?J().then(()=>{C(),Re()}):X().then(D).then(Re)}if("AltRight"===e.code&&"flex"===Le.style.display){Le.style.display="none";let e=[],n=!1;e=je[Ce];for(let t=0;t<e.length;t+=1)Oe.value.trim()===e[t]&&(n=!0);n?ee().then(()=>{R(),Re()}):ne().then(()=>{U(),Re()})}}),Ae.addEventListener("click",()=>{let e=[],n=!1;e=je[Ce],Le.style.display="none";for(let t=0;t<e.length;t+=1)Oe.value.trim()===e[t]&&(n=!0);n?J().then(()=>{C(),Re()}):X().then(D).then(Re)}),_e.addEventListener("click",()=>{Le.style.display="none";let e=[],n=!1;e=je[Ce];for(let t=0;t<e.length;t+=1)Oe.value.trim()===e[t]&&(n=!0);n?ee().then(()=>{R(),Re()}):ne().then(()=>{U(),Re()})});t("./css/style.css");const De=document.createElement("canvas");De.width=1280,De.height=720,document.body.appendChild(De);const Ue=document.querySelector(".monster-HP"),Ne=document.querySelector(".mainHero-HP"),ze=document.querySelector(".menu-open"),$e=document.querySelector(".casts");ze.addEventListener("click",()=>{ze.style.display="none",$e.style.display="flex"}),document.addEventListener("keydown",function(e){"Enter"===e.code&&"none"!==ze.style.display&&(ze.style.display="none",$e.style.display="flex"),"Escape"===e.code&&"none"!==$e.style.display&&(ze.style.display="flex",$e.style.display="none"),"F5"===e.code&&window.location.replace("../../landing-page.html")}),function(){const e=document.querySelector("canvas").getContext("2d"),n=new Image;n.onload=(()=>{e.drawImage(n,30,445)}),n.src=s.a}(),T(),localStorage.setItem("monsterHP",100),localStorage.setItem("mainHero",100),function(){const e=document.querySelector(".mainHero-name"),n=+localStorage.getItem("curplayerid"),t=JSON.parse(localStorage.getItem("players"))[n];e.innerHTML=`${t.userName}`,Ue.innerHTML="100 HP",Ne.innerHTML="100 HP"}(),function(){let e=0;const n=document.getElementsByClassName("select");n[e].classList.add("selected"),document.addEventListener("keydown",function(t){"ArrowUp"===t.code&&(n[e].classList.remove("selected"),e+=1,e%=n.length),"ArrowDown"===t.code&&(n[e].classList.remove("selected"),e-=1),e<0&&(e=n.length-1),n[e].classList.add("selected")})}()},"./src/mainHero/img/main-hero.png":function(e,n,t){e.exports=t.p+"./images/main-hero.png"},"./src/mainHero/index.css":function(e,n,t){var o=t("./node_modules/css-loader/index.js!./src/mainHero/index.css");"string"==typeof o&&(o=[[e.i,o,""]]);var s={hmr:!0,transform:void 0,insertInto:void 0},r=t("./node_modules/style-loader/lib/addStyles.js")(o,s);o.locals&&(e.exports=o.locals),e.hot.accept("./node_modules/css-loader/index.js!./src/mainHero/index.css",function(n){!function(){var n=t("./node_modules/css-loader/index.js!./src/mainHero/index.css");if("string"==typeof n&&(n=[[e.i,n,""]]),!function(e,n){var t,o=0;for(t in e){if(!n||e[t]!==n[t])return!1;o++}for(t in n)o--;return 0===o}(o.locals,n.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");r(n)}()}),e.hot.dispose(function(){r()})},"./src/monsters/img/body1.png":function(e,n,t){e.exports=t.p+"./images/body1.png"},"./src/monsters/img/body2.png":function(e,n,t){e.exports=t.p+"./images/body2.png"},"./src/monsters/img/body3.png":function(e,n,t){e.exports=t.p+"./images/body3.png"},"./src/monsters/img/eyes1.png":function(e,n,t){e.exports=t.p+"./images/eyes1.png"},"./src/monsters/img/eyes2.png":function(e,n,t){e.exports=t.p+"./images/eyes2.png"},"./src/monsters/img/eyes3.png":function(e,n,t){e.exports=t.p+"./images/eyes3.png"},"./src/monsters/img/hands1.png":function(e,n,t){e.exports=t.p+"./images/hands1.png"},"./src/monsters/img/hands2.png":function(e,n,t){e.exports=t.p+"./images/hands2.png"},"./src/monsters/img/hands3.png":function(e,n,t){e.exports=t.p+"./images/hands3.png"},"./src/monsters/img/legs1.png":function(e,n,t){e.exports=t.p+"./images/legs1.png"},"./src/monsters/img/legs2.png":function(e,n,t){e.exports=t.p+"./images/legs2.png"},"./src/monsters/img/legs3.png":function(e,n,t){e.exports=t.p+"./images/legs3.png"},"./src/monsters/img/mouth1.png":function(e,n,t){e.exports=t.p+"./images/mouth1.png"},"./src/monsters/img/mouth2.png":function(e,n,t){e.exports=t.p+"./images/mouth2.png"},"./src/monsters/img/mouth3.png":function(e,n,t){e.exports=t.p+"./images/mouth3.png"},"./src/monsters/index.css":function(e,n,t){var o=t("./node_modules/css-loader/index.js!./src/monsters/index.css");"string"==typeof o&&(o=[[e.i,o,""]]);var s={hmr:!0,transform:void 0,insertInto:void 0},r=t("./node_modules/style-loader/lib/addStyles.js")(o,s);o.locals&&(e.exports=o.locals),e.hot.accept("./node_modules/css-loader/index.js!./src/monsters/index.css",function(n){!function(){var n=t("./node_modules/css-loader/index.js!./src/monsters/index.css");if("string"==typeof n&&(n=[[e.i,n,""]]),!function(e,n){var t,o=0;for(t in e){if(!n||e[t]!==n[t])return!1;o++}for(t in n)o--;return 0===o}(o.locals,n.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");r(n)}()}),e.hot.dispose(function(){r()})},"./src/tasks/audioMet/index.css":function(e,n,t){var o=t("./node_modules/css-loader/index.js!./src/tasks/audioMet/index.css");"string"==typeof o&&(o=[[e.i,o,""]]);var s={hmr:!0,transform:void 0,insertInto:void 0},r=t("./node_modules/style-loader/lib/addStyles.js")(o,s);o.locals&&(e.exports=o.locals),e.hot.accept("./node_modules/css-loader/index.js!./src/tasks/audioMet/index.css",function(n){!function(){var n=t("./node_modules/css-loader/index.js!./src/tasks/audioMet/index.css");if("string"==typeof n&&(n=[[e.i,n,""]]),!function(e,n){var t,o=0;for(t in e){if(!n||e[t]!==n[t])return!1;o++}for(t in n)o--;return 0===o}(o.locals,n.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");r(n)}()}),e.hot.dispose(function(){r()})},"./src/tasks/mathMet/index.css":function(e,n,t){var o=t("./node_modules/css-loader/index.js!./src/tasks/mathMet/index.css");"string"==typeof o&&(o=[[e.i,o,""]]);var s={hmr:!0,transform:void 0,insertInto:void 0},r=t("./node_modules/style-loader/lib/addStyles.js")(o,s);o.locals&&(e.exports=o.locals),e.hot.accept("./node_modules/css-loader/index.js!./src/tasks/mathMet/index.css",function(n){!function(){var n=t("./node_modules/css-loader/index.js!./src/tasks/mathMet/index.css");if("string"==typeof n&&(n=[[e.i,n,""]]),!function(e,n){var t,o=0;for(t in e){if(!n||e[t]!==n[t])return!1;o++}for(t in n)o--;return 0===o}(o.locals,n.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");r(n)}()}),e.hot.dispose(function(){r()})},"./src/tasks/spellsAnimation/img/axe.png":function(e,n,t){e.exports=t.p+"./images/axe.png"},"./src/tasks/spellsAnimation/img/cross.png":function(e,n,t){e.exports=t.p+"./images/cross.png"},"./src/tasks/spellsAnimation/img/hammer.png":function(e,n,t){e.exports=t.p+"./images/hammer.png"},"./src/tasks/spellsAnimation/sounds/drop.mp3":function(e,n,t){e.exports=t.p+"./sound/drop.mp3"},"./src/tasks/spellsAnimation/sounds/hammer.mp3":function(e,n,t){e.exports=t.p+"./sound/hammer.mp3"},"./src/tasks/spellsAnimation/sounds/spear.mp3":function(e,n,t){e.exports=t.p+"./sound/spear.mp3"},"./src/tasks/translateMet/index.css":function(e,n,t){var o=t("./node_modules/css-loader/index.js!./src/tasks/translateMet/index.css");"string"==typeof o&&(o=[[e.i,o,""]]);var s={hmr:!0,transform:void 0,insertInto:void 0},r=t("./node_modules/style-loader/lib/addStyles.js")(o,s);o.locals&&(e.exports=o.locals),e.hot.accept("./node_modules/css-loader/index.js!./src/tasks/translateMet/index.css",function(n){!function(){var n=t("./node_modules/css-loader/index.js!./src/tasks/translateMet/index.css");if("string"==typeof n&&(n=[[e.i,n,""]]),!function(e,n){var t,o=0;for(t in e){if(!n||e[t]!==n[t])return!1;o++}for(t in n)o--;return 0===o}(o.locals,n.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");r(n)}()}),e.hot.dispose(function(){r()})}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,