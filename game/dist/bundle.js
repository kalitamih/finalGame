!function(e){var n=window.webpackHotUpdate;window.webpackHotUpdate=function(e,t){!function(e,n){if(!v[e]||!b[e])return;for(var t in b[e]=!1,n)Object.prototype.hasOwnProperty.call(n,t)&&(f[t]=n[t]);0==--g&&0===h&&k()}(e,t),n&&n(e,t)};var t,r=!0,o="0e6ebeea797b9c09f361",s=1e4,a={},i=[],l=[];function c(e){var n=j[e];if(!n)return E;var r=function(r){return n.hot.active?(j[r]?-1===j[r].parents.indexOf(e)&&j[r].parents.push(e):(i=[e],t=r),-1===n.children.indexOf(r)&&n.children.push(r)):(console.warn("[HMR] unexpected require("+r+") from disposed module "+e),i=[]),E(r)},o=function(e){return{configurable:!0,enumerable:!0,get:function(){return E[e]},set:function(n){E[e]=n}}};for(var s in E)Object.prototype.hasOwnProperty.call(E,s)&&"e"!==s&&Object.defineProperty(r,s,o(s));return r.e=function(e){return"ready"===u&&p("prepare"),h++,E.e(e).then(n,function(e){throw n(),e});function n(){h--,"prepare"===u&&(x[e]||S(e),0===h&&0===g&&k())}},r}var d=[],u="idle";function p(e){u=e;for(var n=0;n<d.length;n++)d[n].call(null,e)}var m,f,y,g=0,h=0,x={},b={},v={};function w(e){return+e+""===e?+e:e}function M(e){if("idle"!==u)throw new Error("check() is only allowed in idle status");return r=e,p("check"),(n=s,n=n||1e4,new Promise(function(e,t){if("undefined"==typeof XMLHttpRequest)return t(new Error("No browser support"));try{var r=new XMLHttpRequest,s=E.p+""+o+".hot-update.json";r.open("GET",s,!0),r.timeout=n,r.send(null)}catch(e){return t(e)}r.onreadystatechange=function(){if(4===r.readyState)if(0===r.status)t(new Error("Manifest request to "+s+" timed out."));else if(404===r.status)e();else if(200!==r.status&&304!==r.status)t(new Error("Manifest request to "+s+" failed."));else{try{var n=JSON.parse(r.responseText)}catch(e){return void t(e)}e(n)}}})).then(function(e){if(!e)return p("idle"),null;b={},x={},v=e.c,y=e.h,p("prepare");var n=new Promise(function(e,n){m={resolve:e,reject:n}});f={};return S(0),"prepare"===u&&0===h&&0===g&&k(),n});var n}function S(e){v[e]?(b[e]=!0,g++,function(e){var n=document.getElementsByTagName("head")[0],t=document.createElement("script");t.charset="utf-8",t.src=E.p+""+e+"."+o+".hot-update.js",n.appendChild(t)}(e)):x[e]=!0}function k(){p("ready");var e=m;if(m=null,e)if(r)Promise.resolve().then(function(){return H(r)}).then(function(n){e.resolve(n)},function(n){e.reject(n)});else{var n=[];for(var t in f)Object.prototype.hasOwnProperty.call(f,t)&&n.push(w(t));e.resolve(n)}}function H(n){if("ready"!==u)throw new Error("apply() is only allowed in ready status");var t,r,s,l,c;function d(e){for(var n=[e],t={},r=n.slice().map(function(e){return{chain:[e],id:e}});r.length>0;){var o=r.pop(),s=o.id,a=o.chain;if((l=j[s])&&!l.hot._selfAccepted){if(l.hot._selfDeclined)return{type:"self-declined",chain:a,moduleId:s};if(l.hot._main)return{type:"unaccepted",chain:a,moduleId:s};for(var i=0;i<l.parents.length;i++){var c=l.parents[i],d=j[c];if(d){if(d.hot._declinedDependencies[s])return{type:"declined",chain:a.concat([c]),moduleId:s,parentId:c};-1===n.indexOf(c)&&(d.hot._acceptedDependencies[s]?(t[c]||(t[c]=[]),m(t[c],[s])):(delete t[c],n.push(c),r.push({chain:a.concat([c]),id:c})))}}}}return{type:"accepted",moduleId:e,outdatedModules:n,outdatedDependencies:t}}function m(e,n){for(var t=0;t<n.length;t++){var r=n[t];-1===e.indexOf(r)&&e.push(r)}}n=n||{};var g={},h=[],x={},b=function(){console.warn("[HMR] unexpected require("+S.moduleId+") to disposed module")};for(var M in f)if(Object.prototype.hasOwnProperty.call(f,M)){var S;c=w(M);var k=!1,H=!1,I=!1,L="";switch((S=f[M]?d(c):{type:"disposed",moduleId:M}).chain&&(L="\nUpdate propagation: "+S.chain.join(" -> ")),S.type){case"self-declined":n.onDeclined&&n.onDeclined(S),n.ignoreDeclined||(k=new Error("Aborted because of self decline: "+S.moduleId+L));break;case"declined":n.onDeclined&&n.onDeclined(S),n.ignoreDeclined||(k=new Error("Aborted because of declined dependency: "+S.moduleId+" in "+S.parentId+L));break;case"unaccepted":n.onUnaccepted&&n.onUnaccepted(S),n.ignoreUnaccepted||(k=new Error("Aborted because "+c+" is not accepted"+L));break;case"accepted":n.onAccepted&&n.onAccepted(S),H=!0;break;case"disposed":n.onDisposed&&n.onDisposed(S),I=!0;break;default:throw new Error("Unexception type "+S.type)}if(k)return p("abort"),Promise.reject(k);if(H)for(c in x[c]=f[c],m(h,S.outdatedModules),S.outdatedDependencies)Object.prototype.hasOwnProperty.call(S.outdatedDependencies,c)&&(g[c]||(g[c]=[]),m(g[c],S.outdatedDependencies[c]));I&&(m(h,[S.moduleId]),x[c]=b)}var A,_=[];for(r=0;r<h.length;r++)c=h[r],j[c]&&j[c].hot._selfAccepted&&_.push({module:c,errorHandler:j[c].hot._selfAccepted});p("dispose"),Object.keys(v).forEach(function(e){!1===v[e]&&function(e){delete installedChunks[e]}(e)});for(var q,O,P=h.slice();P.length>0;)if(c=P.pop(),l=j[c]){var T={},C=l.hot._disposeHandlers;for(s=0;s<C.length;s++)(t=C[s])(T);for(a[c]=T,l.hot.active=!1,delete j[c],delete g[c],s=0;s<l.children.length;s++){var R=j[l.children[s]];R&&((A=R.parents.indexOf(c))>=0&&R.parents.splice(A,1))}}for(c in g)if(Object.prototype.hasOwnProperty.call(g,c)&&(l=j[c]))for(O=g[c],s=0;s<O.length;s++)q=O[s],(A=l.children.indexOf(q))>=0&&l.children.splice(A,1);for(c in p("apply"),o=y,x)Object.prototype.hasOwnProperty.call(x,c)&&(e[c]=x[c]);var D=null;for(c in g)if(Object.prototype.hasOwnProperty.call(g,c)&&(l=j[c])){O=g[c];var U=[];for(r=0;r<O.length;r++)if(q=O[r],t=l.hot._acceptedDependencies[q]){if(-1!==U.indexOf(t))continue;U.push(t)}for(r=0;r<U.length;r++){t=U[r];try{t(O)}catch(e){n.onErrored&&n.onErrored({type:"accept-errored",moduleId:c,dependencyId:O[r],error:e}),n.ignoreErrored||D||(D=e)}}}for(r=0;r<_.length;r++){var N=_[r];c=N.module,i=[c];try{E(c)}catch(e){if("function"==typeof N.errorHandler)try{N.errorHandler(e)}catch(t){n.onErrored&&n.onErrored({type:"self-accept-error-handler-errored",moduleId:c,error:t,originalError:e}),n.ignoreErrored||D||(D=t),D||(D=e)}else n.onErrored&&n.onErrored({type:"self-accept-errored",moduleId:c,error:e}),n.ignoreErrored||D||(D=e)}}return D?(p("fail"),Promise.reject(D)):(p("idle"),new Promise(function(e){e(h)}))}var j={};function E(n){if(j[n])return j[n].exports;var r=j[n]={i:n,l:!1,exports:{},hot:function(e){var n={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:t!==e,active:!0,accept:function(e,t){if(void 0===e)n._selfAccepted=!0;else if("function"==typeof e)n._selfAccepted=e;else if("object"==typeof e)for(var r=0;r<e.length;r++)n._acceptedDependencies[e[r]]=t||function(){};else n._acceptedDependencies[e]=t||function(){}},decline:function(e){if(void 0===e)n._selfDeclined=!0;else if("object"==typeof e)for(var t=0;t<e.length;t++)n._declinedDependencies[e[t]]=!0;else n._declinedDependencies[e]=!0},dispose:function(e){n._disposeHandlers.push(e)},addDisposeHandler:function(e){n._disposeHandlers.push(e)},removeDisposeHandler:function(e){var t=n._disposeHandlers.indexOf(e);t>=0&&n._disposeHandlers.splice(t,1)},check:M,apply:H,status:function(e){if(!e)return u;d.push(e)},addStatusHandler:function(e){d.push(e)},removeStatusHandler:function(e){var n=d.indexOf(e);n>=0&&d.splice(n,1)},data:a[e]};return t=void 0,n}(n),parents:(l=i,i=[],l),children:[]};return e[n].call(r.exports,r,r.exports,c(n)),r.l=!0,r.exports}E.m=e,E.c=j,E.d=function(e,n,t){E.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},E.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},E.t=function(e,n){if(1&n&&(e=E(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(E.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)E.d(t,r,function(n){return e[n]}.bind(null,r));return t},E.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return E.d(n,"a",n),n},E.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},E.p="",E.h=function(){return o},c("./src/index.js")(E.s="./src/index.js")}({"./css/style.css":function(e,n,t){var r=t("./node_modules/css-loader/index.js!./css/style.css");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0},s=t("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals),e.hot.accept("./node_modules/css-loader/index.js!./css/style.css",function(n){!function(){var n=t("./node_modules/css-loader/index.js!./css/style.css");if("string"==typeof n&&(n=[[e.i,n,""]]),!function(e,n){var t,r=0;for(t in e){if(!n||e[t]!==n[t])return!1;r++}for(t in n)r--;return 0===r}(r.locals,n.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");s(n)}()}),e.hot.dispose(function(){s()})},"./node_modules/css-loader/index.js!./css/style.css":function(e,n,t){var r=t("./node_modules/css-loader/lib/url/escape.js");(e.exports=t("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,"* {\n  box-sizing: border-box;\n}\n\n\ncanvas {\n  background-image: url("+r(t("./src/background/img/background.jpg"))+');\n  display: flex;\n  margin: 0 auto;\n  z-index: 1;\n}\n\n.casts {\n  position: absolute;\n  width: 550px;\n  height: 200px;\n  display: none;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-content: flex-start;\n  left: 34%;\n  top: 5%;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 30px;\n}\n\n.mainHero-HP, .monster-HP {\n  display: inline-block;\n  color:red;\n  font-size: 35px;\n  font-weight: 700;\n}\n\n.descriptionKeyBoard {\n  display: block;\n  width: 100%;\n  margin-top: 15px;\n  font-size: 25px;\n  color: #fff;\n  font-weight: bold;\n  text-align: center;\n}\n\n.btn {\n  border: rgb(16, 150, 56) solid 5px;\n  border-radius: 10px;\n  background-color: rgb(255, 215, 0);\n  z-index: 100;\n  width: 150px;\n  height: 50px;\n  color: #000000;\n  font-size: 20px;\n  margin-left: 20px;\n  margin-top: 15px;\n}\n\n.send {\n  margin: 10px;\n  border: 5px solid rgb(16, 150, 56);\n  border-radius: 10px;\n  font-size: 18px;\n  background-color: rgb(255, 215, 0);\n  padding: 5px;\n}\n\n.menu-open {\n  height: 65px;\n  position: absolute;\n  z-index: 4;\n  left: 45%;\n  top: 13%;\n}\n\n.btn:hover {\n  cursor: pointer;\n}\n\n.game-over {\n  position: absolute;\n  width: 30%;\n  height: 100hv;\n  display: none;\n  flex-wrap: wrap;\n  flex-direction: column;\n  align-items: center;\n  left: 34%;\n  top: 5%;\n}\n\n.game-over-heading {\n  font-size: 35px;\n  font-weight: bold;\n  color: red;\n}\n\ntable {\nfont-family: "Lucida Sans Unicode", "Lucida Grande", Sans-Serif;\nfont-size: 14px;\nborder-collapse: collapse;\ntext-align: center;\n}\nth, td:first-child {\nbackground: #FFD700;\ncolor: black;\npadding: 10px 20px;\n}\nth, td {\nborder-style: solid;\nborder-width: 0 1px 1px 0;\nborder-color: black;\n}\ntd {\nbackground: #D8E6F3;\n}\nth:first-child, td:first-child {\ntext-align: left;\n}\n\ncaption {\n  font-size: 25px;\n  font-color: red;\n  padding: 15px;\n  font-weight: bold;\n}\n\n.selected {\n  -webkit-transform: scale(1.2);\n  -ms-transform: scale(1.2);\n  transform: scale(1.2);\n}\n',""])},"./node_modules/css-loader/index.js!./src/mainHero/index.css":function(e,n,t){(e.exports=t("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".mainHero-name,\r\n.mainHero-HP{\r\n\tz-index: 3;\r\n\tposition: absolute;\r\n\tleft: 69%;\r\n\ttop: 5%;\r\n\tfont-size: 24px;\r\n\tcolor: #000000;\r\n\tfont-weight: bold;\r\n}\r\n\r\n.mainHero-name{\r\n\tleft: 10%;\r\n\ttop: 30px;\r\n}\r\n\r\n.mainHero-HP{\r\n\tleft: 11%;\r\n\ttop: 50px;\r\n}",""])},"./node_modules/css-loader/index.js!./src/monsters/index.css":function(e,n,t){(e.exports=t("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".main-hero{\r\n\tz-index: 3;\r\n\tposition: absolute;\r\n}\r\n\r\n.monster-info{\r\n\twidth: 1280px;\r\n\tmargin: 0 auto;\r\n\tposition: relative;\r\n}\r\n\r\n.monster-name,\r\n.monster-HP{\r\n\tz-index: 3;\r\n\tposition: absolute;\r\n\tleft: 69%;\r\n\ttop: 5%;\r\n\tfont-size: 24px;\r\n\tcolor: #000000;\r\n\tfont-weight: bold;\r\n}\r\n\r\n.monster-HP{\r\n\tleft: 85%;\r\n\ttop: 50px;\r\n}\r\n\r\n.monster-name{\r\n\tleft: 80%;\r\n\ttop: 30px;\r\n}",""])},"./node_modules/css-loader/index.js!./src/tasks/audioMet/index.css":function(e,n,t){(e.exports=t("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".audioMet{\r\n\twidth: 550px;\r\n\theight: 500px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbackground-color: rgba(0, 0, 0, 0.5);\r\n\tborder-radius: 10px;\r\n\tposition: absolute;\r\n\tz-index: 5;\r\n\tleft: 35%;\r\n\ttop: 10%;\r\n\tdisplay: none;\r\n}\r\n\r\n.taskHeading,\r\n.task,\r\nlabel{\r\n\tmargin-top: 15px;\r\n\tfont-size: 25px;\r\n\tcolor: #fff;\r\n\tfont-weight: bold;\r\n\ttext-align: center;\r\n}\r\n\r\ninput{\r\n\tmargin-top: 15px;\r\n}\r\n\r\n.selected {\r\n  font-color: black;\r\n}\r\n",""])},"./node_modules/css-loader/index.js!./src/tasks/mathMet/index.css":function(e,n,t){(e.exports=t("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".mathMet{\r\n\twidth: 550px;\r\n\theight: 400px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbackground-color: rgba(0, 0, 0, 0.5);;\r\n\tborder-radius: 10px;\r\n\tposition: absolute;\r\n\tz-index: 5;\r\n\tleft: 35%;\r\n\ttop: 10%;\r\n\tdisplay: none;\r\n}\r\n\r\n.taskHeading,\r\n.task,\r\nlabel{\r\n\tmargin-top: 15px;\r\n\tfont-size: 25px;\r\n\tcolor: #fff;\r\n\tfont-weight: bold;\r\n\ttext-align: center;\r\n}\r\n\r\ninput{\r\n\tmargin-top: 15px;\r\n}\r\n\r\n.selected {\r\n  font-color: black;\r\n}\r\n",""])},"./node_modules/css-loader/index.js!./src/tasks/translateMet/index.css":function(e,n,t){(e.exports=t("./node_modules/css-loader/lib/css-base.js")(!1)).push([e.i,".translateMet{\r\n\twidth: 550px;\r\n\theight: 400px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tbackground-color: rgba(0, 0, 0, 0.5);\r\n\tborder-radius: 10px;\r\n\tposition: absolute;\r\n\tz-index: 5;\r\n\tleft: 35%;\r\n\ttop: 10%;\r\n\tdisplay: none;\r\n}\r\n\r\n.taskHeading,\r\n.task,\r\nlabel{\r\n\tmargin-top: 15px;\r\n\tfont-size: 25px;\r\n\tcolor: #fff;\r\n\tfont-weight: bold;\r\n\ttext-align: center;\r\n}\r\n\r\ninput{\r\n\tmargin-top: 15px;\r\n}\r\n\r\n\r\n",""])},"./node_modules/css-loader/lib/css-base.js":function(e,n){e.exports=function(e){var n=[];return n.toString=function(){return this.map(function(n){var t=function(e,n){var t=e[1]||"",r=e[3];if(!r)return t;if(n&&"function"==typeof btoa){var o=(a=r,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),s=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[t].concat(s).concat([o]).join("\n")}var a;return[t].join("\n")}(n,e);return n[2]?"@media "+n[2]+"{"+t+"}":t}).join("")},n.i=function(e,t){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var s=this[o][0];"number"==typeof s&&(r[s]=!0)}for(o=0;o<e.length;o++){var a=e[o];"number"==typeof a[0]&&r[a[0]]||(t&&!a[2]?a[2]=t:t&&(a[2]="("+a[2]+") and ("+t+")"),n.push(a))}},n}},"./node_modules/css-loader/lib/url/escape.js":function(e,n){e.exports=function(e){return"string"!=typeof e?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),/["'() \t\n]/.test(e)?'"'+e.replace(/"/g,'\\"').replace(/\n/g,"\\n")+'"':e)}},"./node_modules/style-loader/lib/addStyles.js":function(e,n,t){var r,o,s={},a=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=r.apply(this,arguments)),o}),i=function(e){var n={};return function(e){if("function"==typeof e)return e();if(void 0===n[e]){var t=function(e){return document.querySelector(e)}.call(this,e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}}(),l=null,c=0,d=[],u=t("./node_modules/style-loader/lib/urls.js");function p(e,n){for(var t=0;t<e.length;t++){var r=e[t],o=s[r.id];if(o){o.refs++;for(var a=0;a<o.parts.length;a++)o.parts[a](r.parts[a]);for(;a<r.parts.length;a++)o.parts.push(x(r.parts[a],n))}else{var i=[];for(a=0;a<r.parts.length;a++)i.push(x(r.parts[a],n));s[r.id]={id:r.id,refs:1,parts:i}}}}function m(e,n){for(var t=[],r={},o=0;o<e.length;o++){var s=e[o],a=n.base?s[0]+n.base:s[0],i={css:s[1],media:s[2],sourceMap:s[3]};r[a]?r[a].parts.push(i):t.push(r[a]={id:a,parts:[i]})}return t}function f(e,n){var t=i(e.insertInto);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=d[d.length-1];if("top"===e.insertAt)r?r.nextSibling?t.insertBefore(n,r.nextSibling):t.appendChild(n):t.insertBefore(n,t.firstChild),d.push(n);else if("bottom"===e.insertAt)t.appendChild(n);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=i(e.insertInto+" "+e.insertAt.before);t.insertBefore(n,o)}}function y(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var n=d.indexOf(e);n>=0&&d.splice(n,1)}function g(e){var n=document.createElement("style");return void 0===e.attrs.type&&(e.attrs.type="text/css"),h(n,e.attrs),f(e,n),n}function h(e,n){Object.keys(n).forEach(function(t){e.setAttribute(t,n[t])})}function x(e,n){var t,r,o,s;if(n.transform&&e.css){if(!(s=n.transform(e.css)))return function(){};e.css=s}if(n.singleton){var a=c++;t=l||(l=g(n)),r=w.bind(null,t,a,!1),o=w.bind(null,t,a,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(t=function(e){var n=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",h(n,e.attrs),f(e,n),n}(n),r=function(e,n,t){var r=t.css,o=t.sourceMap,s=void 0===n.convertToAbsoluteUrls&&o;(n.convertToAbsoluteUrls||s)&&(r=u(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var a=new Blob([r],{type:"text/css"}),i=e.href;e.href=URL.createObjectURL(a),i&&URL.revokeObjectURL(i)}.bind(null,t,n),o=function(){y(t),t.href&&URL.revokeObjectURL(t.href)}):(t=g(n),r=function(e,n){var t=n.css,r=n.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}.bind(null,t),o=function(){y(t)});return r(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;r(e=n)}else o()}}e.exports=function(e,n){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(n=n||{}).attrs="object"==typeof n.attrs?n.attrs:{},n.singleton||"boolean"==typeof n.singleton||(n.singleton=a()),n.insertInto||(n.insertInto="head"),n.insertAt||(n.insertAt="bottom");var t=m(e,n);return p(t,n),function(e){for(var r=[],o=0;o<t.length;o++){var a=t[o];(i=s[a.id]).refs--,r.push(i)}e&&p(m(e,n),n);for(o=0;o<r.length;o++){var i;if(0===(i=r[o]).refs){for(var l=0;l<i.parts.length;l++)i.parts[l]();delete s[i.id]}}}};var b,v=(b=[],function(e,n){return b[e]=n,b.filter(Boolean).join("\n")});function w(e,n,t,r){var o=t?"":r.css;if(e.styleSheet)e.styleSheet.cssText=v(n,o);else{var s=document.createTextNode(o),a=e.childNodes;a[n]&&e.removeChild(a[n]),a.length?e.insertBefore(s,a[n]):e.appendChild(s)}}},"./node_modules/style-loader/lib/urls.js":function(e,n){e.exports=function(e){var n="undefined"!=typeof window&&window.location;if(!n)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var t=n.protocol+"//"+n.host,r=t+n.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,n){var o,s=n.trim().replace(/^"(.*)"$/,function(e,n){return n}).replace(/^'(.*)'$/,function(e,n){return n});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(s)?e:(o=0===s.indexOf("//")?s:0===s.indexOf("/")?t+s:r+s.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},"./src/background/img/background.jpg":function(e,n,t){e.exports=t.p+"./images/background.jpg"},"./src/index.js":function(e,n,t){"use strict";t.r(n);t("./src/mainHero/index.css");var r=t("./src/mainHero/img/main-hero.png"),o=t.n(r);t("./src/monsters/index.css");var s=t("./src/monsters/img/eyes1.png"),a=t.n(s),i=t("./src/monsters/img/eyes2.png"),l=t.n(i),c=t("./src/monsters/img/eyes3.png"),d=t.n(c),u=t("./src/monsters/img/body1.png"),p=t.n(u),m=t("./src/monsters/img/body2.png"),f=t.n(m),y=t("./src/monsters/img/body3.png"),g=t.n(y),h=t("./src/monsters/img/legs1.png"),x=t.n(h),b=t("./src/monsters/img/legs2.png"),v=t.n(b),w=t("./src/monsters/img/legs3.png"),M=t.n(w),S=t("./src/monsters/img/mouth1.png"),k=t.n(S),H=t("./src/monsters/img/mouth2.png"),j=t.n(H),E=t("./src/monsters/img/mouth3.png"),I=t.n(E),L=t("./src/monsters/img/hands1.png"),A=t.n(L),_=t("./src/monsters/img/hands2.png"),q=t.n(_),O=t("./src/monsters/img/hands3.png"),P=t.n(O);function T(){const e=document.querySelector("canvas").getContext("2d");new Promise(n=>{const t=new Image,r=[p.a,f.a,g.a],o=Math.floor(Math.random()*r.length);t.onload=(()=>{e.drawImage(t,1100,400),n()}),t.src=r[o]}).then(function(){return new Promise(n=>{const t=new Image,r=[A.a,q.a,P.a],o=Math.floor(Math.random()*r.length);t.onload=(()=>{e.drawImage(t,1050,450),n()}),t.src=r[o]})}).then(function(){return new Promise(n=>{const t=new Image,r=[x.a,v.a,M.a],o=Math.floor(Math.random()*r.length);t.onload=(()=>{e.drawImage(t,1110,500),n()}),t.src=r[o]})}).then(function(){return new Promise(n=>{const t=new Image,r=[k.a,j.a,I.a],o=Math.floor(Math.random()*r.length);t.onload=(()=>{e.drawImage(t,1120,473),n()}),t.src=r[o]})}).then(function(){const n=new Image,t=[a.a,l.a,d.a],r=Math.floor(Math.random()*t.length);n.onload=(()=>{e.drawImage(n,1120,415)}),n.src=t[r]}),function(){const e=document.querySelector(".monster-name"),n=["Good","Bad","Ugly"],t=["Wolf","Dragon","Vampire"],r=["Cartman","Kyle","Kenny"],o=Math.floor(Math.random()*n.length),s=Math.floor(Math.random()*t.length),a=Math.floor(Math.random()*r.length),i=`${n[o]} ${t[s]} ${r[a]}`;e.innerHTML=i}()}t("./src/tasks/mathMet/index.css");function C(){const e=document.querySelector(".monster-HP"),n=document.querySelector("canvas").getContext("2d"),t=Math.floor(100*Math.random());let r=localStorage.getItem("monsterHP");if((r-=t)>0&&(localStorage.setItem("monsterHP",r),e.innerHTML=`${r} HP`),r<0){localStorage.setItem("monsterHP",100);let t=+localStorage.getItem("monstersKilled");t+=1,localStorage.setItem("monstersKilled",t),e.innerHTML="100 HP",n.clearRect(900,200,400,395),T()}}function R(){const e=document.querySelector(".mainHero-HP"),n=Math.floor(100*Math.random());let t=localStorage.getItem("mainHero");t=+t+n,localStorage.setItem("mainHero",t),e.innerHTML=`${t} HP`}function D(){return new Promise(e=>{const n=document.querySelector(".mainHero-HP"),t=Math.floor(100*Math.random());let r=localStorage.getItem("mainHero");(r-=t)>0&&(localStorage.setItem("mainHero",r),n.innerHTML=`${r} HP`,e()),r<=0&&(function(){console.log("updateLeaderBoard");const e=+localStorage.getItem("monstersKilled"),n=+localStorage.getItem("curplayerid");let t=localStorage.getItem("rating");t=null==t?[]:JSON.parse(t);const r={name:JSON.parse(localStorage.getItem("players"))[n].userName,streak:e};t.push(r),t=t.sort((e,n)=>n.streak-e.streak).slice(0,10),localStorage.setItem("rating",JSON.stringify(t))}(),function(){const e=document.querySelector("#goLP"),n=document.querySelector(".game-over"),t=document.querySelector("tbody"),r=document.querySelector(".mainHero-HP");let o=localStorage.getItem("rating");o=null==o?[]:JSON.parse(o);for(let e=0;e<o.length;e+=1){const n=document.createElement("tr"),r=document.createElement("td"),s=document.createElement("td");r.innerText=o[e].name,s.innerText=o[e].streak,n.appendChild(r),n.appendChild(s),t.appendChild(n)}document.querySelector(".casts").style.display="none",document.querySelector(".mathMet").style.display="none",document.querySelector(".audioMet").style.display="none",document.querySelector(".translateMet").style.display="none",document.querySelector(".menu-open").style.display="none",r.innerHTML="0 HP",n.style.display="flex",e.addEventListener("click",()=>{window.location.replace("../../landing-page.html")}),document.body.addEventListener("keydown",function(e){"Escape"===e.code&&"flex"===n.style.display&&window.location.replace("../../landing-page.html")})}())})}function U(){const e=document.querySelector(".monster-HP"),n=Math.floor(100*Math.random());let t=localStorage.getItem("monsterHP");t=+t+n,localStorage.setItem("monsterHP",t),e.innerHTML=`${t} HP`}var N=t("./src/tasks/spellsAnimation/img/axe.png"),z=t.n(N),$=t("./src/tasks/spellsAnimation/sounds/spear.mp3"),B=t.n($);function F(){return new Promise(e=>{const n=document.querySelector("canvas").getContext("2d");let t=260;const r=128,o=445,s=new Image;!function(){const e=new Audio;e.src=B.a,e.volume=.5,e.autoplay=!0}();const a=()=>{t<900?(n.clearRect(t,o,r,r),n.drawImage(s,t,o),t+=10,requestAnimationFrame(a)):(n.clearRect(900,o,r,r),e())};a(),s.src=z.a})}var J=t("./src/tasks/spellsAnimation/img/hammer.png"),K=t.n(J),G=t("./src/tasks/spellsAnimation/sounds/hammer.mp3"),Y=t.n(G);function X(){return new Promise(e=>{const n=document.querySelector("canvas").getContext("2d");let t=900;const r=128,o=445,s=new Image;!function(){const e=new Audio;e.src=Y.a,e.volume=.5,e.autoplay=!0}();const a=()=>{t>260?(n.clearRect(t,o,r,r),n.drawImage(s,t,o),t-=10,requestAnimationFrame(a)):(n.clearRect(260,o,r,r),e())};a(),s.src=K.a})}var V=t("./src/tasks/spellsAnimation/img/cross.png"),W=t.n(V),Q=t("./src/tasks/spellsAnimation/sounds/drop.mp3"),Z=t.n(Q);function ee(){return new Promise(e=>{const n=document.querySelector("canvas").getContext("2d");let t=100;const r=100,o=128,s=new Image;!function(){const e=new Audio;e.src=Z.a,e.volume=.5,e.autoplay=!0}();const a=()=>{t<300?(n.clearRect(r,t-10,o,o),n.drawImage(s,r,t),t+=10,requestAnimationFrame(a)):(n.clearRect(r,290,o,o),e())};a(),s.src=W.a})}function ne(){return new Promise(e=>{const n=document.querySelector("canvas").getContext("2d");let t=100;const r=1050,o=128,s=new Image;!function(){const e=new Audio;e.src=Z.a,e.volume=.5,e.autoplay=!0}();const a=()=>{t<270?(n.clearRect(r,t-10,o,o),n.drawImage(s,r,t),t+=10,requestAnimationFrame(a)):(n.clearRect(r,260,o,o),e())};a(),s.src=W.a})}!function(){const e=document.createElement("button");e.className="btn",e.classList.add("select"),e.id="callMathMet",e.innerHTML="Arithmetics",document.querySelector(".casts").appendChild(e)}(),function(){const e=document.createElement("div");e.className="mathMet",e.innerHTML='<span class="taskHeading">Solve an example:</span><span class="task"></span><label for="#userMathInput">Your answer:</label><input type="text" id="userMathInput"><button type="submit" id="sendMathAnswer" class="send">Attack(Enter)</button><button type="submit" id="sendMathCure" class="send">Cure(AltRight)</button><button type="submit" id="mathMainMenu" class="send">Back(Esc)</button>',document.body.appendChild(e)}();const te=document.querySelector("#callMathMet"),re=document.querySelector(".casts"),oe=document.querySelector(".mathMet"),se=document.querySelector("#sendMathAnswer"),ae=document.querySelector("#sendMathCure"),ie=document.querySelector("#mathMainMenu"),le=document.querySelector("#userMathInput"),ce=document.querySelector(".task"),de=()=>{let e=0,n=0;const t=["+","-"],r=Math.floor(Math.random()*t.length);return e=Math.floor(100*Math.random()+0),n=Math.floor(100*Math.random()+0),[t[r],e,n]};let ue=[];function pe(){ce.innerHTML="",re.style.display="flex",le.value="",console.log("show window")}te.addEventListener("click",()=>{re.style.display="none",oe.style.display="flex",ue=de(),ce.innerHTML=`${ue[1]} ${ue[0]} ${ue[2]}`}),document.addEventListener("keydown",function(e){"Space"===e.code&&te.classList.contains("selected")&&"flex"===re.style.display&&(re.style.display="none",oe.style.display="flex",ue=de(),ce.innerHTML=`${ue[1]} ${ue[0]} ${ue[2]}`,le.focus())});const me=()=>{let e=0;return"+"===ue[0]?`${e=ue[1]+ue[2]}`:"-"===ue[0]?`${e=ue[1]-ue[2]}`:0};ie.addEventListener("click",()=>{oe.style.display="none",re.style.display="flex"}),document.addEventListener("keydown",function(e){"Escape"===e.code&&"flex"===oe.style.display&&(oe.style.display="none",re.style.display="flex"),"Enter"===e.code&&"flex"===oe.style.display&&(oe.style.display="none",le.value.trim()===me()?F().then(()=>{C(),pe()}):X().then(D).then(pe)),"AltRight"===e.code&&"flex"===oe.style.display&&(le.value.trim()===me()?ee().then(()=>{R(),pe()}):ne().then(()=>{U(),pe()}),oe.style.display="none",ce.innerHTML="",re.style.display="flex",le.value="")}),se.addEventListener("click",()=>{oe.style.display="none",le.value.trim()===me()?F().then(()=>{C(),pe()}):X().then(D).then(pe)}),ae.addEventListener("click",()=>{oe.style.display="none",ce.innerHTML="",re.style.display="flex",le.value.trim()===me()?ee().then(()=>{R(),pe()}):ne().then(()=>{U(),pe()}),le.value=""});t("./src/tasks/audioMet/index.css");!function(){const e=document.createElement("button");e.className="btn",e.id="callAudioMet",e.classList.add("select"),e.innerHTML="Audio",document.querySelector(".casts").appendChild(e)}(),function(){const e=document.createElement("div");e.className="audioMet",e.innerHTML='<span class="taskHeading">Enter the word that you heard<br>(Use CtrlRight to listen word):</span><span class="task"><audio src="" controls></audio></span><label for="#userAudioInput">Your answer:</label><input type="text" id="userAudioInput"><button type="submit" id="sendAudioAnswer" class="send">Attack(Enter)</button><button type="submit" id="sendAudioCure" class="send">Cure(AltLeft)</button><button type="submit" id="audioMainMenu" class="send">Back(Esc)</button>;',document.body.appendChild(e)}();const fe=document.querySelector(".casts"),ye=document.querySelector(".audioMet"),ge=document.querySelector("#sendAudioAnswer"),he=document.querySelector("#sendAudioCure"),xe=document.querySelector("#audioMainMenu"),be=document.querySelector("#callAudioMet"),ve=document.querySelector("#userAudioInput"),we=document.querySelector("audio"),Me={"https://www.anglaisfacile.com/free/words/r/respect.wav":"respect","https://www.anglaisfacile.com/free/words/g/ground.wav":"ground","https://www.anglaisfacile.com/free/words/m/movie.wav":"movie","https://www.anglaisfacile.com/free/words/v/vomit.wav":"vomit"};let Se="";const ke=()=>{return Math.floor(Math.random()*Object.keys(Me).length)};function He(){we.src="",fe.style.display="flex",ve.value=""}be.addEventListener("click",()=>{fe.style.display="none",Se=Object.keys(Me)[ke()],we.src=Se,ye.style.display="flex"}),document.addEventListener("keydown",function(e){"Space"===e.code&&be.classList.contains("selected")&&"flex"===fe.style.display&&(fe.style.display="none",Se=Object.keys(Me)[ke()],we.src=Se,ye.style.display="flex")}),xe.addEventListener("click",()=>{ye.style.display="none",fe.style.display="flex"}),document.addEventListener("keydown",function(e){"ControlRight"===e.code&&"flex"===ye.style.display&&(we.play(),ve.focus()),"Escape"===e.code&&"flex"===ye.style.display&&(ye.style.display="none",fe.style.display="flex"),"Enter"===e.code&&"flex"===ye.style.display&&(ye.style.display="none",ve.value.trim()===Me[Se]?F().then(()=>{C(),He()}):X().then(D).then(He)),"AltRight"===e.code&&"flex"===ye.style.display&&(ye.style.display="none",ve.value.trim()===Me[Se]?ee().then(()=>{R(),He()}):ne().then(()=>{U(),He()}))}),ge.addEventListener("click",()=>{ye.style.display="none",ve.value.trim()===Me[Se]?F().then(()=>{C(),He()}):X().then(D).then(He)}),he.addEventListener("click",()=>{ye.style.display="none",ve.value.trim()===Me[Se]?ee().then(()=>{R(),He()}):ne().then(()=>{U(),He()})});t("./src/tasks/translateMet/index.css");const je={dog:["собака","пес","собачка"],task:["задача","урок","задание"],cat:["кот","кошка"],mind:["разум","ум","мнение"],game:["развлечение","игра","партия"],skirt:["юбка","подол","край"],global:["глобальный","мировой","общий","всеобщий"],activity:["активность","деятельность","энергия"],amount:["количество","сумма","итог"],blind:["слепой","слепить","штора"],cartoon:["мультфильм","карикатура","комикс","мультик"],transfer:["перевод","передача","трансфер"],dictionary:["словарь"],environment:["окружающая среда","окружение","среда"],famous:["известный","знаменитый","замечательный"],horror:["ужас","ужастик"],inspiration:["вдохновение","воодушевление","вдох"],jealous:["завистливый","ревнивый","заботливый","зависть","ревность"],lucky:["счастливый","везучий","удачливый"],message:["сообщение","послание","письмо"],mysterious:["загадочный","таинственный","непостижимый"],realize:["реализовать","понимать","осуществлять"]};!function(){const e=document.createElement("button");e.className="btn",e.id="callTranslateMet",e.classList.add("select"),e.innerHTML="Translate",document.querySelector(".casts").appendChild(e)}(),function(){const e=document.createElement("div");e.className="translateMet",e.innerHTML='<span class="taskHeading">Translate the next word:</span><span class="task" id="translateText"></span><label for="#userTranslateInput">Your answer:</label><input type="text" id="userTranslateInput"><button type="submit" id="sendTranslateAnswer" class="send">Attack(Enter)</button><button type="submit" id="sendTranslateCure" class="send">Cure(AltRight)</button><button type="submit" id="translateMainMenu" class="send">Back(Esc)</button>',document.body.appendChild(e)}();const Ee=document.querySelector("#callTranslateMet"),Ie=document.querySelector(".casts"),Le=document.querySelector(".translateMet"),Ae=document.querySelector("#sendTranslateAnswer"),_e=document.querySelector("#sendTranslateCure"),qe=document.querySelector("#translateMainMenu"),Oe=document.querySelector("#userTranslateInput"),Pe=document.querySelector("#translateText"),Te=()=>{return Math.floor(Math.random()*Object.keys(je).length)};let Ce="";function Re(){Pe.innerHTML="",Ie.style.display="flex",Oe.value=""}Ee.addEventListener("click",()=>{Ie.style.display="none",Le.style.display="flex",Ce=Object.keys(je)[Te()],Pe.innerHTML=Ce}),document.addEventListener("keydown",function(e){"Space"===e.code&&Ee.classList.contains("selected")&&"flex"===Ie.style.display&&(Ie.style.display="none",Le.style.display="flex",Ce=Object.keys(je)[Te()],Pe.innerHTML=Ce,Oe.focus())}),qe.addEventListener("click",()=>{Le.style.display="none",Ie.style.display="flex"}),document.addEventListener("keydown",function(e){if("Escape"===e.code&&"flex"===Le.style.display&&(Le.style.display="none",Ie.style.display="flex"),"Enter"===e.code&&"flex"===Le.style.display){Le.style.display="none";let e=[],n=!1;e=je[Ce];for(let t=0;t<e.length;t+=1)Oe.value.trim()===e[t]&&(n=!0);n?F().then(()=>{C(),Re()}):X().then(D).then(Re)}if("AltRight"===e.code&&"flex"===Le.style.display){Le.style.display="none";let e=[],n=!1;e=je[Ce];for(let t=0;t<e.length;t+=1)Oe.value.trim()===e[t]&&(n=!0);n?ee().then(()=>{R(),Re()}):ne().then(()=>{U(),Re()})}}),Ae.addEventListener("click",()=>{let e=[],n=!1;e=je[Ce],Le.style.display="none";for(let t=0;t<e.length;t+=1)Oe.value.trim()===e[t]&&(n=!0);n?F().then(()=>{C(),Re()}):X().then(D).then(Re)}),_e.addEventListener("click",()=>{Le.style.display="none";let e=[],n=!1;e=je[Ce];for(let t=0;t<e.length;t+=1)Oe.value.trim()===e[t]&&(n=!0);n?ee().then(()=>{R(),Re()}):ne().then(()=>{U(),Re()})});t("./css/style.css");const De=document.createElement("canvas");De.width=1280,De.height=720,document.body.appendChild(De);const Ue=document.querySelector(".monster-HP"),Ne=document.querySelector(".mainHero-HP"),ze=document.querySelector(".menu-open"),$e=document.querySelector(".casts");ze.addEventListener("click",()=>{ze.style.display="none",$e.style.display="flex"}),document.addEventListener("keydown",function(e){"Enter"===e.code&&"none"!==ze.style.display&&(ze.style.display="none",$e.style.display="flex"),"Escape"===e.code&&"none"!==$e.style.display&&(ze.style.display="flex",$e.style.display="none"),"F5"===e.code&&window.location.replace("../../landing-page.html")}),function(){const e=document.querySelector("canvas").getContext("2d"),n=new Image;n.onload=(()=>{e.drawImage(n,30,445)}),n.src=o.a}(),T(),localStorage.setItem("monsterHP",100),localStorage.setItem("mainHero",100),function(){const e=document.querySelector(".mainHero-name"),n=+localStorage.getItem("curplayerid"),t=JSON.parse(localStorage.getItem("players"))[n];e.innerHTML=`${t.userName}`,Ue.innerHTML="100 HP",Ne.innerHTML="100 HP"}(),function(){let e=0;const n=document.getElementsByClassName("select");n[e].classList.add("selected"),document.addEventListener("keydown",function(t){"ArrowUp"===t.code&&(n[e].classList.remove("selected"),e+=1,e%=n.length),"ArrowDown"===t.code&&(n[e].classList.remove("selected"),e-=1),e<0&&(e=n.length-1),n[e].classList.add("selected")})}()},"./src/mainHero/img/main-hero.png":function(e,n,t){e.exports=t.p+"./images/main-hero.png"},"./src/mainHero/index.css":function(e,n,t){var r=t("./node_modules/css-loader/index.js!./src/mainHero/index.css");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0},s=t("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals),e.hot.accept("./node_modules/css-loader/index.js!./src/mainHero/index.css",function(n){!function(){var n=t("./node_modules/css-loader/index.js!./src/mainHero/index.css");if("string"==typeof n&&(n=[[e.i,n,""]]),!function(e,n){var t,r=0;for(t in e){if(!n||e[t]!==n[t])return!1;r++}for(t in n)r--;return 0===r}(r.locals,n.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");s(n)}()}),e.hot.dispose(function(){s()})},"./src/monsters/img/body1.png":function(e,n,t){e.exports=t.p+"./images/body1.png"},"./src/monsters/img/body2.png":function(e,n,t){e.exports=t.p+"./images/body2.png"},"./src/monsters/img/body3.png":function(e,n,t){e.exports=t.p+"./images/body3.png"},"./src/monsters/img/eyes1.png":function(e,n,t){e.exports=t.p+"./images/eyes1.png"},"./src/monsters/img/eyes2.png":function(e,n,t){e.exports=t.p+"./images/eyes2.png"},"./src/monsters/img/eyes3.png":function(e,n,t){e.exports=t.p+"./images/eyes3.png"},"./src/monsters/img/hands1.png":function(e,n,t){e.exports=t.p+"./images/hands1.png"},"./src/monsters/img/hands2.png":function(e,n,t){e.exports=t.p+"./images/hands2.png"},"./src/monsters/img/hands3.png":function(e,n,t){e.exports=t.p+"./images/hands3.png"},"./src/monsters/img/legs1.png":function(e,n,t){e.exports=t.p+"./images/legs1.png"},"./src/monsters/img/legs2.png":function(e,n,t){e.exports=t.p+"./images/legs2.png"},"./src/monsters/img/legs3.png":function(e,n,t){e.exports=t.p+"./images/legs3.png"},"./src/monsters/img/mouth1.png":function(e,n,t){e.exports=t.p+"./images/mouth1.png"},"./src/monsters/img/mouth2.png":function(e,n,t){e.exports=t.p+"./images/mouth2.png"},"./src/monsters/img/mouth3.png":function(e,n,t){e.exports=t.p+"./images/mouth3.png"},"./src/monsters/index.css":function(e,n,t){var r=t("./node_modules/css-loader/index.js!./src/monsters/index.css");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0},s=t("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals),e.hot.accept("./node_modules/css-loader/index.js!./src/monsters/index.css",function(n){!function(){var n=t("./node_modules/css-loader/index.js!./src/monsters/index.css");if("string"==typeof n&&(n=[[e.i,n,""]]),!function(e,n){var t,r=0;for(t in e){if(!n||e[t]!==n[t])return!1;r++}for(t in n)r--;return 0===r}(r.locals,n.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");s(n)}()}),e.hot.dispose(function(){s()})},"./src/tasks/audioMet/index.css":function(e,n,t){var r=t("./node_modules/css-loader/index.js!./src/tasks/audioMet/index.css");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0},s=t("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals),e.hot.accept("./node_modules/css-loader/index.js!./src/tasks/audioMet/index.css",function(n){!function(){var n=t("./node_modules/css-loader/index.js!./src/tasks/audioMet/index.css");if("string"==typeof n&&(n=[[e.i,n,""]]),!function(e,n){var t,r=0;for(t in e){if(!n||e[t]!==n[t])return!1;r++}for(t in n)r--;return 0===r}(r.locals,n.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");s(n)}()}),e.hot.dispose(function(){s()})},"./src/tasks/mathMet/index.css":function(e,n,t){var r=t("./node_modules/css-loader/index.js!./src/tasks/mathMet/index.css");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0},s=t("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals),e.hot.accept("./node_modules/css-loader/index.js!./src/tasks/mathMet/index.css",function(n){!function(){var n=t("./node_modules/css-loader/index.js!./src/tasks/mathMet/index.css");if("string"==typeof n&&(n=[[e.i,n,""]]),!function(e,n){var t,r=0;for(t in e){if(!n||e[t]!==n[t])return!1;r++}for(t in n)r--;return 0===r}(r.locals,n.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");s(n)}()}),e.hot.dispose(function(){s()})},"./src/tasks/spellsAnimation/img/axe.png":function(e,n,t){e.exports=t.p+"./images/axe.png"},"./src/tasks/spellsAnimation/img/cross.png":function(e,n,t){e.exports=t.p+"./images/cross.png"},"./src/tasks/spellsAnimation/img/hammer.png":function(e,n,t){e.exports=t.p+"./images/hammer.png"},"./src/tasks/spellsAnimation/sounds/drop.mp3":function(e,n,t){e.exports=t.p+"./sound/drop.mp3"},"./src/tasks/spellsAnimation/sounds/hammer.mp3":function(e,n,t){e.exports=t.p+"./sound/hammer.mp3"},"./src/tasks/spellsAnimation/sounds/spear.mp3":function(e,n,t){e.exports=t.p+"./sound/spear.mp3"},"./src/tasks/translateMet/index.css":function(e,n,t){var r=t("./node_modules/css-loader/index.js!./src/tasks/translateMet/index.css");"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0},s=t("./node_modules/style-loader/lib/addStyles.js")(r,o);r.locals&&(e.exports=r.locals),e.hot.accept("./node_modules/css-loader/index.js!./src/tasks/translateMet/index.css",function(n){!function(){var n=t("./node_modules/css-loader/index.js!./src/tasks/translateMet/index.css");if("string"==typeof n&&(n=[[e.i,n,""]]),!function(e,n){var t,r=0;for(t in e){if(!n||e[t]!==n[t])return!1;r++}for(t in n)r--;return 0===r}(r.locals,n.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");s(n)}()}),e.hot.dispose(function(){s()})}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,